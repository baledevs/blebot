# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, coder2020official
# This file is distributed under the same license as the pyTelegramBotAPI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pyTelegramBotAPI Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-08 23:07+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/util.rst:3
msgid "Utils"
msgstr "Утилиты"

#: ../../source/util.rst:5
msgid "Utils in pyTelegramBotAPI"
msgstr "Утилиты в pyTelegramBotAPI"

#: ../../source/util.rst:5
msgid "ptba, pytba, pyTelegramBotAPI, utils, guide"
msgstr "ptba, pytba, pyTelegramBotAPI, утилиты, гайд"

#: ../../source/util.rst:11
msgid "util file"
msgstr "Файл util"

#: of blebot.util.antiflood:1
msgid ""
"Use this function inside loops in order to avoid getting TooManyRequests "
"error. Example:"
msgstr ""
"Используйте эту функцию в циклах, чтобы избежать ошибки TooManyRequests. "
"Пример:"

#: of blebot.service_utils.is_bytes blebot.service_utils.is_dict
#: blebot.service_utils.is_pil_image blebot.util.antiflood
#: blebot.util.escape blebot.util.extract_arguments
#: blebot.util.extract_command blebot.util.is_command
#: blebot.util.parse_web_app_data blebot.util.quick_markup
#: blebot.util.smart_split blebot.util.split_string blebot.util.user_link
#: blebot.util.validate_web_app_data blebot.util.webhook_google_functions
msgid "Parameters"
msgstr ""

#: of blebot.util.antiflood:10
msgid "The function to call"
msgstr "Вызываемая функция"

#: of blebot.util.antiflood:13
msgid "Number of retries to send"
msgstr ""

#: of blebot.util.antiflood:16
msgid "The arguments to pass to the function"
msgstr "Аргументы, для передачи в функцию"

#: of blebot.util.antiflood:19
msgid "The keyword arguments to pass to the function"
msgstr "Именованные аргументы для передачи в функцию"

#: of blebot.service_utils.generate_random_token
#: blebot.service_utils.is_bytes blebot.service_utils.is_dict
#: blebot.service_utils.is_pil_image blebot.util.antiflood
#: blebot.util.escape blebot.util.extract_arguments
#: blebot.util.extract_command blebot.util.is_command
#: blebot.util.parse_web_app_data blebot.util.quick_markup
#: blebot.util.smart_split blebot.util.split_string blebot.util.user_link
#: blebot.util.validate_web_app_data blebot.util.webhook_google_functions
msgid "Returns"
msgstr ""

#: of blebot.util.antiflood:22
msgid "None"
msgstr ""

#: of blebot.service_utils.chunks:1
msgid "Yield successive n-sized chunks from lst."
msgstr "Генерирует последовательные части списка, состоящие из n элементов."

#: ../../docstring of blebot.util.content_type_media:1
msgid "Contains all media content types."
msgstr "Содержит все виды медиа."

#: ../../docstring of blebot.util.content_type_service:1
msgid "Contains all service content types such as `User joined the group`."
msgstr "Содержит все виды сервисных сообщений, такие как `User joined the group`."

#: of blebot.util.escape:1
msgid ""
"Replaces the following chars in `text` ('&' with '&amp;', '<' with '&lt;'"
" and '>' with '&gt;')."
msgstr ""
"Заменяет следующие символы в `text` ('&' на '&amp;', '<' на '&lt;' и '>' "
"на '&gt;')."

#: of blebot.util.escape:3
msgid "the text to escape"
msgstr "Текст для замены символов"

#: of blebot.util.escape:4
msgid "the escaped text"
msgstr "Отформатированный текст"

#: of blebot.util.extract_arguments:1
msgid "Returns the argument after the command."
msgstr "Возвращает аргументы команды."

#: of blebot.util.extract_arguments:3 blebot.util.extract_command:4
msgid "Examples:"
msgstr "Примеры:"

#: of blebot.util.extract_arguments:10
msgid "String to extract the arguments from a command"
msgstr "Строка для извлечения аргументов команды"

#: of blebot.util.extract_arguments:13
msgid "the arguments if `text` is a command (according to is_command), else None."
msgstr ""
"Аргументы, если `text` является командой (согласно is_command), в "
"остальных случаях None."

#: of blebot.service_utils.generate_random_token
#: blebot.service_utils.is_bytes blebot.service_utils.is_dict
#: blebot.service_utils.is_pil_image blebot.util.extract_arguments
#: blebot.util.extract_command blebot.util.is_command
#: blebot.util.quick_markup blebot.util.smart_split blebot.util.split_string
#: blebot.util.user_link
msgid "Return type"
msgstr ""

#: of blebot.util.extract_arguments:14 blebot.util.extract_command:16
msgid ":obj:`str` or :obj:`None`"
msgstr ":obj:`str` или :obj:`None`"

#: of blebot.util.extract_command:1
msgid ""
"Extracts the command from `text` (minus the '/') if `text` is a command "
"(see is_command). If `text` is not a command, this function returns None."
msgstr ""
"Извлекает команду из `text` (исключает '/') если `text` является командой"
" (см. is_command). Если `text` не является командой, эта функция "
"возвращает None."

#: of blebot.util.extract_command:12
msgid "String to extract the command from"
msgstr "Строка, из которой нужно извлечь команду"

#: of blebot.util.extract_command:15
msgid "the command if `text` is a command (according to is_command), else None."
msgstr ""
"Команда, если `text` является командой (согласно is_command), в остальных"
" случаях None."

#: of blebot.service_utils.generate_random_token:1
msgid ""
"Generates a random token consisting of letters and digits, 16 characters "
"long."
msgstr ""
"Генерирует рандомный токен, состоящий из латинских букв и цифр длиной 16 "
"символов."

#: of blebot.service_utils.generate_random_token:3
msgid "a random token"
msgstr "Сгенерированный токен"

#: of blebot.service_utils.generate_random_token:4 blebot.util.user_link:22
msgid ":obj:`str`"
msgstr ""

#: of blebot.service_utils.is_bytes:1
msgid "Returns True if the given object is a bytes object."
msgstr "Возвращает True если полученный объект является bytes."

#: of blebot.service_utils.is_bytes:3 blebot.service_utils.is_dict:3
#: blebot.service_utils.is_pil_image:3
msgid "object to be checked"
msgstr "Объект для проверки"

#: of blebot.service_utils.is_bytes:6
msgid "True if the given object is a bytes object."
msgstr "True, если полученный объект является bytes."

#: of blebot.service_utils.is_bytes:7 blebot.service_utils.is_dict:7
#: blebot.service_utils.is_pil_image:7 blebot.util.is_command:7
msgid ":obj:`bool`"
msgstr ""

#: of blebot.util.is_command:1
msgid ""
"Checks if `text` is a command. Telegram chat commands start with the '/' "
"character."
msgstr ""
"Проверяет, является ли `text` командой. Команды в Telegram начинаются с "
"символа '/'."

#: of blebot.util.is_command:3
msgid "Text to check."
msgstr "Текст для проверки."

#: of blebot.util.is_command:6
msgid "True if `text` is a command, else False."
msgstr "True, если `text` является командой, иначе False."

#: of blebot.service_utils.is_dict:1
msgid "Returns True if the given object is a dictionary."
msgstr "Возвращает True, если полученный объект является словарём (dict)."

#: of blebot.service_utils.is_dict:6
msgid "True if the given object is a dictionary."
msgstr "True, если полученный объект является словарём (dict)."

#: of blebot.service_utils.is_pil_image:1
msgid "Returns True if the given object is a PIL.Image.Image object."
msgstr "Возвращает True, если полученный объект является PIL.Image.Image."

#: of blebot.service_utils.is_pil_image:6
msgid "True if the given object is a PIL.Image.Image object."
msgstr "True, если полученный объект является PIL.Image.Image."

#: of blebot.service_utils.is_string:1
msgid "Returns True if the given object is a string."
msgstr "Возвращает True, если полученный объект является строкой (str)."

#: of blebot.util.parse_web_app_data:1
msgid "Parses web app data."
msgstr "Обрабатывает данные, полученные от web app."

#: of blebot.util.parse_web_app_data:3 blebot.util.validate_web_app_data:3
msgid "The bot token"
msgstr "Токен бота"

#: of blebot.util.parse_web_app_data:6 blebot.util.validate_web_app_data:6
msgid "The raw init data"
msgstr "Необработанные данные"

#: of blebot.util.parse_web_app_data:9 blebot.util.validate_web_app_data:9
msgid "The parsed init data"
msgstr "Обработанные данные"

#: of blebot.util.quick_markup:1
msgid ""
"Returns a reply markup from a dict in this format: {'text': kwargs} This "
"is useful to avoid always typing 'btn1 = InlineKeyboardButton(...)' 'btn2"
" = InlineKeyboardButton(...)'"
msgstr ""
"Возвращает reply markup из словаря следующего формата: {'text': kwargs}. "
"Удобно использовать вместо постоянного использования 'btn1 = "
"InlineKeyboardButton(...)' 'btn2 = InlineKeyboardButton(...)'"

#: of blebot.util.quick_markup:4 blebot.util.user_link:5
msgid "Example:"
msgstr "Пример:"

#: of blebot.util.quick_markup:6
msgid "Using quick_markup:"
msgstr "Используя quick_markup:"

#: of blebot.util.quick_markup:31
msgid ""
"a dict containing all buttons to create in this format: {text: kwargs} "
"{str:}"
msgstr ""
"Словарь, содержащий все кнопки для создания reply markup в следующем "
"формате: {text: kwargs} {str:}"

#: of blebot.util.quick_markup:34
msgid "number of :class:`blebot.types.InlineKeyboardButton` objects on each row"
msgstr ""

#: of blebot.util.quick_markup:37
msgid "InlineKeyboardMarkup"
msgstr ""

#: of blebot.util.quick_markup:38
msgid ":obj:`types.InlineKeyboardMarkup`"
msgstr ""

#: of blebot.util.smart_split:1
msgid ""
"Splits one string into multiple strings, with a maximum amount of "
"`chars_per_string` characters per string. This is very useful for "
"splitting one giant message into multiples. If `chars_per_string` > 4096:"
" `chars_per_string` = 4096. Splits by '\\n', '. ' or ' ' in exactly this "
"priority."
msgstr ""
"Разбивает строку на несколько, каждая из которых будет не длиннее "
"`characters_per_string`. Удобно использовать для разбиения одного "
"гигантского сообщения на несколько. Если `chars_per_string` > 4096: "
"`chars_per_string` = 4096. Разбивает строку по '\\n', '. ' или ' ' именно"
" в таком порядке."

#: of blebot.util.smart_split:6 blebot.util.split_string:4
msgid "The text to split"
msgstr "Текст для разбиения"

#: of blebot.util.smart_split:9
msgid "The number of maximum characters per part the text is split to."
msgstr ""
"Максимальное количество символов в части текста, на которые он будет "
"разбит."

#: of blebot.util.smart_split:12 blebot.util.split_string:10
msgid "The splitted text as a list of strings."
msgstr "Список частей разбитого текста."

#: of blebot.util.smart_split:13 blebot.util.split_string:11
msgid ":obj:`list` of :obj:`str`"
msgstr ""

#: of blebot.util.split_string:1
msgid ""
"Splits one string into multiple strings, with a maximum amount of "
"`chars_per_string` characters per string. This is very useful for "
"splitting one giant message into multiples."
msgstr ""
"Разбивает одну строку на несколько, каждая из которых будет не длиннее "
"`characters_per_string`. Удобно использовать для разбиения одного "
"гигантского сообщения на несколько."

#: of blebot.util.split_string:7
msgid "The number of characters per line the text is split into."
msgstr "Количество символов в одной строке, на которые будет разбит текст."

#: ../../docstring of blebot.util.update_types:1
msgid "All update types, should be used for allowed_updates parameter in polling."
msgstr ""
"Все виды апдейтов, рекомендуется использовать в качестве параметра "
"allowed_updates функции polling."

#: of blebot.util.user_link:1
msgid ""
"Returns an HTML user link. This is useful for reports. Attention: Don't "
"forget to set parse_mode to 'HTML'!"
msgstr ""
"Возвращает HTML ссылку на пользователя. Удобно использовать для отчетов. "
"Важно: Не забудьте установить значение 'HTML' в parse_mode!"

#: of blebot.util.user_link:11
msgid ""
"You can use formatting.* for all other formatting options(bold, italic, "
"links, and etc.) This method is kept for backward compatibility, and it "
"is recommended to use formatting.* for more options."
msgstr ""
"Вы можете использовать formatting.* во всех остальных вариантах "
"форматирования(bold, italic, links, и прочее). Этот метод сохранён для "
"обратной совместимости, рекомендуется использовать formatting.* для "
"большего количества вариантов."

#: of blebot.util.user_link:15
msgid "the user (not the user_id)"
msgstr "Пользователь (не id пользователя)"

#: of blebot.util.user_link:18
msgid "include the user_id"
msgstr "Добавить id пользователя"

#: of blebot.util.user_link:21
msgid "HTML user link"
msgstr "Ссылка на пользователя в формате HTML"

#: of blebot.util.validate_web_app_data:1
msgid "Validates web app data."
msgstr "Проверяет данные, полученные от web app."

#: of blebot.util.webhook_google_functions:1
msgid "A webhook endpoint for Google Cloud Functions FaaS."
msgstr "Endpoint вебхука для Google Cloud Functions FaaS."

#: of blebot.util.webhook_google_functions:3
msgid "The bot instance"
msgstr "Инстанс бота"

#: of blebot.util.webhook_google_functions:6
msgid "The request object"
msgstr "HTTP-запрос"

#: of blebot.util.webhook_google_functions:9
msgid "The response object"
msgstr "Объект, полученный в качестве ответа"

#~ msgid "int row width"
#~ msgstr "Количество кнопок в одной строке, int"

